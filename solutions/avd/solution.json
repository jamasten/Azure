{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "CustomRdpProperty": {
            "type": "string",
            "metadata": {
                "description": "Input RDP properties to add or remove RDP functionality on the AVD host pool. Settings reference: https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/rdp-files?context=/azure/virtual-desktop/context/context"
            },
            "defaultValue": "audiocapturemode:i:1;camerastoredirect:s:*;use multimon:i:0;drivestoredirect:s:;"
        },
        "DiskSku": {
            "type": "string",
            "metadata": {
                "description": "The storage SKU for the AVD session host disks.  Production deployments should use 'Premium_LRS'."
            },
            "allowedValues": [
                "Standard_LRS",
                "StandardSSD_LRS",
                "Premium_LRS"
            ],
            "defaultValue": "Standard_LRS"
        },
        "WorkloadName": {
            "type": "string",
            "metadata": {
                "description": "The workload name that will be appended to all resources"
            },
            "maxLength": 7
        },
        "EnvironmentName": {
            "type": "string",
            "metadata": {
                "description": "The 3 character max length name of the environment that will be appended to all resources.  Some exampels are dev, tst, stg, prod."
            },
            "maxLength": 3
        },
        "DomainJoinPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the privileged account to domain join the AVD session hosts to your domain"
            }
        },
        "DomainJoinUserPrincipalName": {
            "type": "string",
            "metadata": {
                "description": "The UPN of the privileged account to domain join the AVD session hosts to your domain. This should be an account the resides within the domain you are joining."
            }
        },
        "DomainName": {
            "type": "string",
            "metadata": {
                "description": "The name of the domain that provides ADDS to the AVD session hosts and is synchronized with Azure AD"
            },
            "defaultValue": "battelle.us"
        },
        "DomainServices": {
            "type": "string",
            "defaultValue": "AzureActiveDirectory",
            "metadata": {
                "description": "The service providing domain services for Azure Virtual Desktop.  This is needed to determine the proper solution to domain join the Azure Storage Account."
            },
            "allowedValues": [
                "ActiveDirectory",
                "AzureActiveDirectory"
            ]
        },
        "EphemeralOsDisk": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Choose whether the session host uses an ephemeral disk for the operating system.  Be sure to select a VM SKU that offers a temporary disk that meets your image requirements. Reference: https://docs.microsoft.com/en-us/azure/virtual-machines/ephemeral-os-disks"
            }
        },
        "HostPoolType": {
            "type": "string",
            "metadata": {
                "description": "These options specify the host pool type and depending on the type, provides the load balancing options and assignment types."
            },
            "allowedValues": [
                "Pooled DepthFirst",
                "Pooled BreadthFirst",
                "Personal Automatic",
                "Personal Direct"
            ],
            "defaultValue": "Pooled DepthFirst"
        },
        "ImageOffer": {
            "type": "string",
            "metadata": {
                "description": "Offer for the virtual machine image"
            },
            "defaultValue": "office-365"
        },
        "ImagePublisher": {
            "type": "string",
            "metadata": {
                "description": "Publisher for the virtual machine image"
            },
            "defaultValue": "MicrosoftWindowsDesktop"
        },
        "ImageSku": {
            "type": "string",
            "metadata": {
                "description": "SKU for the virtual machine image"
            },
            "defaultValue": "21h1-evd-o365pp"
        },
        "ImageVersion": {
            "type": "string",
            "metadata": {
                "description": "Version for the virtual machine image"
            },
            "defaultValue": "latest"
        },
        "KerberosEncryptionType": {
            "type": "string",
            "metadata": {
                "description": "The Active Directory computer object Kerberos encryption type for the Azure Storage Account."
            },
            "allowedValues": [
                "AES256",
                "RC4"
            ],
            "defaultValue": "RC4"
        },
        "LogAnalyticsWorkspaceRetention": {
            "type": "int",
            "metadata": {
                "description": "The retention for the Log Analytics Workspace to setup the AVD Monitoring solution"
            },
            "defaultValue": 30,
            "maxValue": 730,
            "minValue": 30
        },
        "LogAnalyticsWorkspaceSku": {
            "type": "string",
            "metadata": {
                "description": "The SKU for the Log Analytics Workspace to setup the AVD Monitoring solution"
            },
            "defaultValue": "PerGB2018",
            "allowedValues": [
                "Free",
                "Standard",
                "Premium",
                "PerNode",
                "PerGB2018",
                "Standalone",
                "CapacityReservation"
            ]
        },
        "MaxSessionLimit": {
            "type": "int",
            "metadata": {
                "description": "The maximum number of sessions per AVD session host."
            },
            "defaultValue": 2
        },
        "newOrExisting": {
            "type": "string",
            "metadata": {
                "description": "Sets whether this is the first deployment of this solution or is a follow up deployment to add new or additional AVD session hosts."
            },
            "allowedValues": [
                "new",
                "existing"
            ],
            "defaultValue": "new"
        },
        "Optimizations": {
            "type": "string",
            "metadata": {
                "description": "The AVD optimizations to implement on the Session Hosts using the optimization script. Input a string array with any of the following values: 'All','WindowsMediaPlayer','AppxPackages','ScheduledTasks','DefaultUserSettings','Autologgers','Services','NetworkOptimizations','LGPO','DiskCleanup'"
            },
            "defaultValue": "All"
        },
        "OuPath": {
            "type": "string",
            "metadata": {
                "description": "The distinguished name for the target Organization Unit in Active Directory Domain Services."
            },
            "defaultValue": "OU=AADDC Computers,DC=battelle,DC=us"
        },
        "RecoveryServices": {
            "type": "bool",
            "metadata": {
                "description": "Enable backups to an Azure Recovery Services vault.  For a pooled host pool, this will enable backups on the Azure file share.  For a personal host pool, this will enable backups on the AVD sessions hosts."
            }
        },
        "ResourceNameSuffix": {
            "type": "string",
            "metadata": {
                "description": "Use letters and numbers only.  This suffix is used in conjunction with the resource type prefixes to name most of the Azure resources in this solution.  The only exception is the Storage Account since the value must globally unique and has stricter character requirements."
            },
            "maxLength": 10,
            "defaultValue": "avdpocdeus"
        },
        "ScalingBeginPeakTime": {
            "type": "string",
            "metadata": {
                "description": "Time when session hosts will scale up and continue to stay on to support peak demand; Format 24 hours, e.g. 9:00 for 9am"
            },
            "defaultValue": "9:00"
        },
        "ScalingEndPeakTime": {
            "type": "string",
            "metadata": {
                "description": "Time when session hosts will scale down and stay off to support low demand; Format 24 hours, e.g. 17:00 for 5pm"
            },
            "defaultValue": "17:00"
        },
        "ScalingLimitSecondsToForceLogOffUser": {
            "type": "string",
            "metadata": {
                "description": "The number of seconds to wait before automatically signing out users. If set to 0, any session host that has user sessions will be left untouched"
            },
            "defaultValue": "0"
        },
        "ScalingMinimumNumberOfRdsh": {
            "type": "string",
            "metadata": {
                "description": "The minimum number of session host VMs to keep running during off-peak hours. The scaling tool will not work if all VM's are turned off and the Start VM On Connect solution is not enabled."
            },
            "defaultValue": "0"
        },
        "ScalingSessionThresholdPerCPU": {
            "type": "string",
            "metadata": {
                "description": "The maximum number of sessions per CPU that will be used as a threshold to determine when new session host VMs need to be started during peak hours"
            },
            "defaultValue": "1"
        },
        "ScalingTimeDifference": {
            "type": "string",
            "metadata": {
                "description": "Time zone off set for host pool location; Format 24 hours, e.g. -4:00 for Eastern Daylight Time"
            },
            "defaultValue": "-4:00"
        },
        "SecurityPrincipalId": {
            "type": "string",
            "metadata": {
                "description": "The Object ID for the Security Principal to assign to the AVD Application Group.  This Security Principal will be assigned the Desktop Virtualization User role on the Application Group."
            },
            "defaultValue": "8d8e9837-ab22-4de6-9d6d-7768195c6444"
        },
        "SecurityPrincipalName": {
            "type": "string",
            "metadata": {
                "description": "The name for the Security Principal to assign NTFS permissions on the Azure File Share to support FSLogix.  Any value can be input in this field if performing a deployment update or choosing a personal host pool."
            },
            "defaultValue": "avd_users"
        },
        "SessionHostCount": {
            "type": "int",
            "metadata": {
                "description": "The number of session hosts to deploy in the host pool"
            },
            "defaultValue": 2
        },
        "SessionHostIndex": {
            "type": "int",
            "metadata": {
                "description": "The session host number to begin with for the deployment. This is important when adding VM's to ensure the names do not conflict."
            },
            "defaultValue": 0
        },
        "StartVmOnConnect": {
            "type": "bool",
            "metadata": {
                "description": "Enable the 'Start VM On Connect' feature. https://docs.microsoft.com/en-us/azure/virtual-desktop/start-virtual-machine-connect"
            },
            "defaultValue": true
        },
        "StorageAccountSku": {
            "type": "string",
            "metadata": {
                "description": "The SKU for the Azure storage account containing the AVD user profile data."
            },
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "defaultValue": "Standard_LRS"
        },
        "Subnet": {
            "type": "string",
            "metadata": {
                "description": "The subnet for the AVD session hosts."
            }
        },
        "Tags": {
            "type": "object",
            "metadata": {
                "description": "Key / value pairs of metadata for the Azure resources."
            },
            "defaultValue": {
                "Owner": "CUBE",
                "Purpose": "POC",
                "Environment": "Development"
            }
        },
        "Timestamp": {
            "type": "string",
            "defaultValue": "[utcNow('yyyyMMddhhmmss')]"
        },
        "ValidationEnvironment": {
            "type": "bool",
            "metadata": {
                "description": "The value determines whether the hostpool should receive early AVD updates for testing."
            },
            "defaultValue": false
        },
        "VirtualNetwork": {
            "type": "string",
            "metadata": {
                "description": "Virtual network for the AVD sessions hosts"
            }
        },
        "VirtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Virtual network resource group for the AVD sessions hosts"
            }
        },
        "VmPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Local administrator password for the AVD session hosts"
            }
        },
        "VmSize": {
            "type": "string",
            "metadata": {
                "description": "The VM SKU for the AVD session hosts."
            },
            "defaultValue": "Standard_B2s"
        },
        "VmUsername": {
            "type": "string",
            "metadata": {
                "description": "The Local Administrator Username for the Session Hosts"
            },
            "defaultValue": "azadmin"
        },
        "WvdObjectId": {
            "type": "string",
            "metadata": {
                "description": "The Object ID for the 'Windows Virtual Desktop' Enterprise Application in Azure AD.  The Object ID can found by selecting 'Microsoft Applications' using the 'Application type' filter in the Enterprise Applications blade of Azure AD."
            },
            "defaultValue": "55c182d1-9935-4ed7-a448-5d453e52e2ed"
        }
    },
    "variables": {
        "ResourceNameSuffix": "[concat(parameters('WorkloadName'), parameters('EnvironmentName'))]",
        "AppGroupName": "[concat('dag-', variables('ResourceNameSuffix'))]",
        "AutomationAccountName": "[concat('aa-', variables('ResourceNameSuffix'))]",
        "HostPoolName": "[concat('hp-', variables('ResourceNameSuffix'))]",
        "Location": "[deployment().location]",
        "LogAnalyticsWorkspaceName": "[concat('law-', variables('ResourceNameSuffix'))]",
        "LogicAppName": "[concat('la-',  variables('ResourceNameSuffix'))]",
        "Netbios": "[split(parameters('DomainName'), '.')[0]]",
        "RecoveryServicesVaultName": "[concat('rsv-', parameters('ResourceNameSuffix'))]",
        "ResourceGroups": [
            "[concat('rg-', variables('ResourceNameSuffix'), '-infra')]",
            "[concat('rg-',  variables('ResourceNameSuffix'), '-hosts')]"
        ],
        "RoleAssignmentName": "[guid(subscription().id, 'WindowsVirtualDesktop')]",
        "RoleDefinitionName": "[guid(subscription().id, 'StartVmOnConnect')]",
        "StorageAccountName": "[concat('stor', toLower(substring(uniqueString(subscription().id, variables('ResourceGroups')[0]), 0, 11)))]",
        "TimeZones": {
            "australiacentral": "Australian Eastern Standard Time",
            "australiacentral2": "Australian Eastern Standard Time",
            "australiaeast": "Australian Eastern Standard Time",
            "australiasoutheast": "Australian Eastern Standard Time",
            "brazilsouth": "Brasília Time",
            "brazilsoutheast": "Brasília Time",
            "canadacentral": "Eastern Standard Time",
            "canadaeast": "Eastern Standard Time",
            "centralindia": "India Standard Time",
            "centralus": "Central Standard Time",
            "chinaeast": "China Standard Time",
            "chinaeast2": "China Standard Time",
            "chinanorth": "China Standard Time",
            "chinanorth2": "China Standard Time",
            "eastasia": "Hong Kong Time",
            "eastus": "Eastern Standard Time",
            "eastus2": "Eastern Standard Time",
            "francecentral": "Central European Time",
            "francesouth": "Central European Time",
            "germanynorth": "Central European Time",
            "germanywestcentral": "Central European Time",
            "japaneast": "Japan Standard Time",
            "japanwest": "Japan Standard Time",
            "jioindiacentral": "India Standard Time",
            "jioindiawest": "India Standard Time",
            "koreacentral": "Korea Standard Time",
            "koreasouth": "Korea Standard Time",
            "northcentralus": "Central Standard Time",
            "northeurope": "Irish Standard Time",
            "norwayeast": "Central European Time",
            "norwaywest": "Central European Time",
            "southafricanorth": "South Africa Standard Time",
            "southafricawest": "South Africa Standard Time",
            "southcentralus": "Central Standard Time",
            "southindia": "India Standard Time",
            "southeastasia": "Singapore Time",
            "swedencentral": "Central European Time",
            "switzerlandnorth": "Central European Time",
            "switzerlandwest": "Central European Time",
            "uaecentral": "Gulf Standard Time",
            "uaenorth": "Gulf Standard Time",
            "uksouth": "Greenwich Mean Time",
            "ukwest": "Greenwich Mean Time",
            "usdodcentral": "Central Standard Time",
            "usdodeast": "Eastern Standard Time",
            "usgovarizona": "Mountain Standard Time",
            "usgoviowa": "Central Standard Time",
            "usgovtexas": "Central Standard Time",
            "usgovvirginia": "Eastern Standard Time",
            "westcentralus": "Mountain Standard Time",
            "westeurope": "Central European Time",
            "westindia": "India Standard Time",
            "westus": "Pacific Standard Time",
            "westus2": "Pacific Standard Time",
            "westus3": "Mountain Standard Time"
        },
        "VmName": "[concat('vm', parameters('ResourceNameSuffix'))]",
        "WorkspaceName": "[concat('ws-', parameters('ResourceNameSuffix'))]"
    },
    "resources": [
        {
            "comments": "---------- RESOURCE GROUPS ----------",
            "name": "[variables('ResourceGroups')[copyIndex()]]",
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "location": "[variables('Location')]",
            "tags": "[parameters('Tags')]",
            "properties": {},
            "copy": {
                "name": "rgLoop",
                "count": "[length(variables('ResourceGroups'))]"
            }
        },
        {
            "comments": "---------- CUSTOM ROLE > START VM ON CONNECT ----------",
            "condition": "[parameters('StartVmOnConnect')]",
            "name": "[variables('RoleDefinitionName')]",
            "type": "Microsoft.Authorization/roleDefinitions",
            "apiVersion": "2017-09-01",
            "properties": {
                "roleName": "[variables('RoleDefinitionName')]",
                "description": "Allow AVD session hosts to be started when needed.",
                "type": "customRole",
                "permissions": [
                    {
                        "actions": [
                            "Microsoft.Compute/virtualMachines/start/action",
                            "Microsoft.Compute/virtualMachines/read"
                        ],
                        "notActions": []
                    }
                ],
                "assignableScopes": [
                    "[subscription().id]"
                ]
            }
        },
        {
            "comments": "---------- ROLE ASSIGNMENT > WINDOWS VIRTUAL DESKTOP ----------",
            "condition": "[parameters('StartVmOnConnect')]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2017-09-01",
            "name": "[variables('RoleAssignmentName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/roleDefinitions', variables('RoleDefinitionName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('RoleDefinitionName'))]",
                "principalId": "[parameters('WvdObjectId')]",
                "scope": "[subscription().id]"
            }
        },
        {
            "comments": "---------- LINKED DEPLOYMENT > AVD HOST POOL ----------",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[concat('HostPool_', parameters('Timestamp'))]",
            "tags": "[parameters('Tags')]",
            "resourceGroup": "[variables('ResourceGroups')[0]]",
            "dependsOn": [
                "rgLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/jamasten/Azure/master/solutions/avd/templates/hostPool.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "AppGroupName": {
                        "value": "[variables('AppGroupName')]"
                    },
                    "CustomRdpProperty": {
                        "value": "[parameters('CustomRdpProperty')]"
                    },
                    "HostPoolName": {
                        "value": "[variables('HostPoolName')]"
                    },
                    "HostPoolType": {
                        "value": "[parameters('HostPoolType')]"
                    },
                    "LogAnalyticsWorkspaceName": {
                        "value": "[variables('LogAnalyticsWorkspaceName')]"
                    },
                    "LogAnalyticsWorkspaceRetention": {
                        "value": "[parameters('LogAnalyticsWorkspaceRetention')]"
                    },
                    "LogAnalyticsWorkspaceSku": {
                        "value": "[parameters('LogAnalyticsWorkspaceSku')]"
                    },
                    "Location": {
                        "value": "[variables('Location')]"
                    },
                    "MaxSessionLimit": {
                        "value": "[parameters('MaxSessionLimit')]"
                    },
                    "newOrExisting": {
                        "value": "[parameters('newOrExisting')]"
                    },
                    "SecurityPrincipalId": {
                        "value": "[parameters('SecurityPrincipalId')]"
                    },
                    "StartVmOnConnect": {
                        "value": "[parameters('StartVmOnConnect')]"
                    },
                    "Tags": {
                        "value": "[parameters('Tags')]"
                    },
                    "ValidationEnvironment": {
                        "value": "[parameters('ValidationEnvironment')]"
                    },
                    "WorkspaceName": {
                        "value": "[variables('WorkspaceName')]"
                    }
                }
            }
        },
        {
            "comments": "---------- LINKED DEPLOYMENT > BACKUP ----------",
            "condition": "[parameters('RecoveryServices')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[concat('Backup_', parameters('Timestamp'))]",
            "tags": "[parameters('Tags')]",
            "resourceGroup": "[variables('ResourceGroups')[0]]",
            "dependsOn": [
                "rgLoop"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/jamasten/Azure/master/solutions/avd/templates/backup.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "HostPoolType": {
                        "value": "[parameters('HostPoolType')]"
                    },
                    "Location": {
                        "value": "[variables('Location')]"
                    },
                    "RecoveryServicesVaultName": {
                        "value": "[variables('RecoveryServicesVaultName')]"
                    },
                    "Tags": {
                        "value": "[parameters('Tags')]"
                    },
                    "TimeZone": {
                        "value": "[variables('TimeZones')[variables('Location')]]"
                    }
                }
            }
        },
        {
            "comments": "---------- LINKED DEPLOYMENT > AVD SESSION HOSTS ----------",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[concat('SessionHosts_', parameters('Timestamp'))]",
            "tags": "[parameters('Tags')]",
            "resourceGroup": "[variables('ResourceGroups')[1]]",
            "dependsOn": [
                "rgLoop",
                "[concat('HostPool_', parameters('Timestamp'))]",
                "[concat('Backup_', parameters('Timestamp'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/jamasten/Azure/master/solutions/avd/templates/sessionHosts.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "DiskSku": {
                        "value": "[parameters('DiskSku')]"
                    },
                    "DomainJoinPassword": {
                        "value": "[parameters('DomainJoinPassword')]"
                    },
                    "DomainJoinUserPrincipalName": {
                        "value": "[parameters('DomainJoinUserPrincipalName')]"
                    },
                    "DomainName": {
                        "value": "[parameters('DomainName')]"
                    },
                    "EphemeralOsDisk": {
                        "value": "[parameters('EphemeralOsDisk')]"
                    },
                    "HostPoolName": {
                        "value": "[variables('HostPoolName')]"
                    },
                    "HostPoolResourceGroupName": {
                        "value": "[variables('ResourceGroups')[0]]"
                    },
                    "HostPoolType": {
                        "value": "[parameters('HostPoolType')]"
                    },
                    "ImageOffer": {
                        "value": "[parameters('ImageOffer')]"
                    },
                    "ImagePublisher": {
                        "value": "[parameters('ImagePublisher')]"
                    },
                    "ImageSku": {
                        "value": "[parameters('ImageSku')]"
                    },
                    "ImageVersion": {
                        "value": "[parameters('ImageVersion')]"
                    },
                    "Location": {
                        "value": "[variables('Location')]"
                    },
                    "LogAnalyticsWorkspaceName": {
                        "value": "[variables('LogAnalyticsWorkspaceName')]"
                    },
                    "LogAnalyticsWorkspaceResourceGroupName": {
                        "value": "[variables('ResourceGroups')[0]]"
                    },
                    "Optimizations": {
                        "value": "[parameters('Optimizations')]"
                    },
                    "OuPath": {
                        "value": "[parameters('OuPath')]"
                    },
                    "RecoveryServices": {
                        "value": "[parameters('RecoveryServices')]"
                    },
                    "RecoveryServicesVaultName": {
                        "value": "[variables('RecoveryServicesVaultName')]"
                    },
                    "RecoveryServicesVaultResourceGroupName": {
                        "value": "[variables('ResourceGroups')[0]]"
                    },
                    "ResourceNameSuffix": {
                        "value": "[variables('ResourceNameSuffix')]"
                    },
                    "SessionHostCount": {
                        "value": "[parameters('SessionHostCount')]"
                    },
                    "SessionHostIndex": {
                        "value": "[parameters('SessionHostIndex')]"
                    },
                    "StorageAccountName": {
                        "value": "[variables('StorageAccountName')]"
                    },
                    "Subnet": {
                        "value": "[parameters('Subnet')]"
                    },
                    "Tags": {
                        "value": "[parameters('Tags')]"
                    },
                    "Timestamp": {
                        "value": "[parameters('Timestamp')]"
                    },
                    "VirtualNetwork": {
                        "value": "[parameters('VirtualNetwork')]"
                    },
                    "VirtualNetworkResourceGroup": {
                        "value": "[parameters('VirtualNetworkResourceGroup')]"
                    },
                    "VmName": {
                        "value": "[variables('VmName')]"
                    },
                    "VmPassword": {
                        "value": "[parameters('VmPassword')]"
                    },
                    "VmSize": {
                        "value": "[parameters('VmSize')]"
                    },
                    "VmUsername": {
                        "value": "[parameters('VmUsername')]"
                    }
                }
            }
        },
        {
            "comments": "---------- LINKED DEPLOYMENT > FSLOGIX ----------",
            "condition": "[equals(split(parameters('HostPoolType'), ' ')[0], 'Pooled')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[concat('FSLogix_', parameters('Timestamp'))]",
            "tags": "[parameters('Tags')]",
            "resourceGroup": "[variables('ResourceGroups')[0]]",
            "dependsOn": [
                "rgLoop",
                "[concat('HostPool_', parameters('Timestamp'))]",
                "[concat('Backup_', parameters('Timestamp'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/jamasten/Azure/master/solutions/avd/templates/fslogix.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "DomainJoinPassword": {
                        "value": "[parameters('DomainJoinPassword')]"
                    },
                    "DomainJoinUserPrincipalName": {
                        "value": "[parameters('DomainJoinUserPrincipalName')]"
                    },
                    "DomainName": {
                        "value": "[parameters('DomainName')]"
                    },
                    "DomainServices": {
                        "value": "[parameters('DomainServices')]"
                    },
                    "HostPoolName": {
                        "value": "[variables('HostPoolName')]"
                    },
                    "KerberosEncryptionType": {
                        "value": "[parameters('KerberosEncryptionType')]"
                    },
                    "Location": {
                        "value": "[variables('Location')]"
                    },
                    "Netbios": {
                        "value": "[variables('Netbios')]"
                    },
                    "OuPath": {
                        "value": "[parameters('OuPath')]"
                    },
                    "RecoveryServices": {
                        "value": "[parameters('RecoveryServices')]"
                    },
                    "RecoveryServicesVaultName": {
                        "value": "[variables('RecoveryServicesVaultName')]"
                    },
                    "ResourceNameSuffix": {
                        "value": "[variables('ResourceNameSuffix')]"
                    },
                    "SecurityPrincipalId": {
                        "value": "[parameters('SecurityPrincipalId')]"
                    },
                    "SecurityPrincipalName": {
                        "value": "[parameters('SecurityPrincipalName')]"
                    },
                    "StorageAccountName": {
                        "value": "[variables('StorageAccountName')]"
                    },
                    "StorageAccountSku": {
                        "value": "[parameters('StorageAccountSku')]"
                    },
                    "Subnet": {
                        "value": "[parameters('Subnet')]"
                    },
                    "Tags": {
                        "value": "[parameters('Tags')]"
                    },
                    "Timestamp": {
                        "value": "[parameters('Timestamp')]"
                    },
                    "VirtualNetwork": {
                        "value": "[parameters('VirtualNetwork')]"
                    },
                    "VirtualNetworkResourceGroup": {
                        "value": "[parameters('VirtualNetworkResourceGroup')]"
                    },
                    "VmName": {
                        "value": "[variables('VmName')]"
                    },
                    "VmPassword": {
                        "value": "[parameters('VmPassword')]"
                    },
                    "VmUsername": {
                        "value": "[parameters('VmUsername')]"
                    }
                }
            }
        },
        {
            "comments": "---------- LINKED DEPLOYMENT > SCALING AUTOMATION ----------",
            "condition": "[equals(split(parameters('HostPoolType'), ' ')[0], 'Pooled')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[concat('ScalingAutomation_', parameters('Timestamp'))]",
            "tags": "[parameters('Tags')]",
            "resourceGroup": "[variables('ResourceGroups')[0]]",
            "dependsOn": [
                "[concat('FSLogix_', parameters('Timestamp'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/jamasten/Azure/master/solutions/avd/templates/scale.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "AutomationAccountName": {
                        "value": "[variables('AutomationAccountName')]"
                    },
                    "BeginPeakTime": {
                        "value": "[parameters('ScalingBeginPeakTime')]"
                    },
                    "EndPeakTime": {
                        "value": "[parameters('ScalingEndPeakTime')]"
                    },
                    "HostPoolName": {
                        "value": "[variables('HostPoolName')]"
                    },
                    "HostPoolResourceGroupName": {
                        "value": "[variables('ResourceGroups')[0]]"
                    },
                    "LimitSecondsToForceLogOffUser": {
                        "value": "[parameters('ScalingLimitSecondsToForceLogOffUser')]"
                    },
                    "Location": {
                        "value": "[variables('Location')]"
                    },
                    "LogAnalyticsWorkspaceResourceId": {
                        "value": "[concat(subscription().id, '/resourcegroups/', variables('ResourceGroups')[0], '/providers/microsoft.operationalinsights/workspaces/', variables('LogAnalyticsWorkspaceName'))]"
                    },
                    "LogicAppName": {
                        "value": "[variables('LogicAppName')]"
                    },
                    "MinimumNumberOfRdsh": {
                        "value": "[parameters('ScalingMinimumNumberOfRdsh')]"
                    },
                    "SessionHostsResourceGroupName": {
                        "value": "[variables('ResourceGroups')[1]]"
                    },
                    "SessionThresholdPerCPU": {
                        "value": "[parameters('ScalingSessionThresholdPerCPU')]"
                    },
                    "TimeDifference": {
                        "value": "[parameters('ScalingTimeDifference')]"
                    }
                }
            }
        }
    ]
}
