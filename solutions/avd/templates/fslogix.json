{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "DomainJoinPassword": {
            "type": "securestring"
        },
        "DomainJoinUserPrincipalName": {
            "type": "string"
        },
        "DomainName": {
            "type": "string"
        },
        "DomainServices": {
            "type": "string"
        },
        "HostPoolName": {
            "type": "string"
        },
        "KerberosEncryptionType": {
            "type": "string"
        },
        "Location": {
            "type": "string"
        },
        "Netbios": {
            "type": "string"
        },
        "OuPath": {
            "type": "string"
        },
        "RecoveryServices": {
            "type": "bool"
        },
        "RecoveryServicesVaultName": {
            "type": "string"
        },
        "ResourceNameSuffix": {
            "type": "string"
        },
        "SecurityPrincipalId": {
            "type": "string"
        },
        "SecurityPrincipalName": {
            "type": "string"
        },
        "StorageAccountName": {
            "type": "string"
        },
        "StorageAccountSku": {
            "type": "string"
        },
        "Subnet": {
            "type": "string"
        },
        "Tags": {
            "type": "object"
        },
        "Timestamp": {
            "type": "string"
        },
        "VirtualNetwork": {
            "type": "string"
        },
        "VirtualNetworkResourceGroup": {
            "type": "string"
        },
        "VmName": {
            "type": "string"
        },
        "VmPassword": {
            "type": "securestring"
        },
        "VmUsername": {
            "type": "string"
        }
    },
    "variables": {
        "BackupContainer": "[concat('storagecontainer;Storage;', resourceGroup().name, ';', parameters('StorageAccountName'))]",
        "NicName": "[concat('nic-', parameters('resourceNameSuffix'), '-mgt')]",
        "ResourceGroupName": "[resourceGroup().name]",
        "RoleAssignmentName": "[guid(parameters('StorageAccountName'), '0')]",
        "RoleAssignmentName_Users": "[guid(concat(parameters('StorageAccountName'), '/default/', parameters('HostPoolName')), '0')]",
        "VmName": "[concat(parameters('VmName'), 'mgt')]"
    },
    "resources": [
        {
            "comments": "---------- NETWORK INTERFACES ----------",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[variables('NicName')]",
            "location": "[parameters('Location')]",
            "tags": "[parameters('Tags')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId(subscription().subscriptionId, parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetwork'), parameters('Subnet'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "comments": "---------- VIRTUAL MACHINES ----------",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "name": "[variables('VmName')]",
            "location": "[parameters('Location')]",
            "tags": "[parameters('Tags')]",
            "dependsOn": [
                "[variables('NicName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "createOption": "FromImage",
                        "caching": "None",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[variables('VmName')]",
                    "adminUsername": "[parameters('VmUsername')]",
                    "adminPassword": "[parameters('VmPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                },
                "licenseType": "Windows_Server"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "resources": [
                {
                    "comments": "---------- VM DOMAIN JOIN EXTENSION ----------",
                    "apiVersion": "2019-07-01",
                    "type": "extensions",
                    "name": "JsonADDomainExtension",
                    "location": "[parameters('Location')]",
                    "tags": "[parameters('Tags')]",
                    "dependsOn": [
                        "[variables('VmName')]"
                    ],
                    "properties": {
                        "forceUpdateTag": "[parameters('Timestamp')]",
                        "publisher": "Microsoft.Compute",
                        "type": "JsonADDomainExtension",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "Name": "[parameters('DomainName')]",
                            "User": "[parameters('DomainJoinUserPrincipalName')]",
                            "Restart": "true",
                            "Options": "3"
                        },
                        "protectedSettings": {
                            "Password": "[parameters('DomainJoinPassword')]"
                        }
                    }
                }
            ]
        },
        {
            "comments": "---------- STORAGE ACCOUNT ----------",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-02-01",
            "name": "[parameters('StorageAccountName')]",
            "location": "[parameters('Location')]",
            "tags": "[parameters('Tags')]",
            "sku": {
                "name": "[parameters('StorageAccountSku')]",
                "tier": "[split(parameters('StorageAccountSku'), '_')[0]]"
            },
            "kind": "[if(equals(split(parameters('StorageAccountSku'), '_')[0], 'Standard'), 'StorageV2', 'FileStorage')]",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "azureFilesIdentityBasedAuthentication": {
                    "directoryServiceOptions": "[if(equals(parameters('DomainServices'), 'AzureActiveDirectory'), 'AADDS', 'None')]"
                }
            }
        },
        {
            "comments": "---------- ROLE ASSIGNMENT > STORAGE ACCOUNT > CONTRIBUTOR ----------",
            "condition": "[equals(parameters('DomainServices'), 'ActiveDirectory')]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('RoleAssignmentName')]",
            "scope": "[concat('Microsoft.Storage/storageAccounts', '/', parameters('StorageAccountName'))]",
            "dependsOn": [
                "[variables('VmName')]",
                "[parameters('StorageAccountName')]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', variables('VmName')), '2020-12-01', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "comments": "---------- ROLE ASSIGNMENT > STORAGE ACCOUNT > STORAGE FILE DATA SMB SHARE CONTRIBUTOR ----------",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('RoleAssignmentName_Users')]",
            "scope": "[concat('Microsoft.Storage/storageAccounts', '/', parameters('StorageAccountName'))]",
            "dependsOn": [
                "[parameters('StorageAccountName')]",
                "[variables('RoleAssignmentName')]"

            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb')]",
                "principalId": "[parameters('SecurityPrincipalId')]"
            }
        },
        {
            "comments": "---------- STORAGE ACCOUNT > FILE SERVICES ----------",
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2021-02-01",
            "name": "[concat(parameters('StorageAccountName'), '/default')]",
            "tags": "[parameters('Tags')]",
            "dependsOn": [
                "[parameters('StorageAccountName')]",
                "[variables('RoleAssignmentName')]"
            ],
            "properties": {
                "shareDeleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "comments": "---------- STORAGE ACCOUNT > FILE SHARE ----------",
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2021-02-01",
            "name": "[concat(parameters('StorageAccountName'), '/default/', toLower(parameters('HostPoolName')))]",
            "tags": "[parameters('Tags')]",
            "dependsOn": [
                "[parameters('StorageAccountName')]",
                "[variables('RoleAssignmentName')]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('StorageAccountName'), 'default')]"
            ],
            "properties": {
                "accessTier": "[if(equals(parameters('StorageAccountSku'), 'Premium_LRS'), 'Premium', 'TransactionOptimized')]",
                "shareQuota": 100,
                "enabledProtocols": "SMB"
            }
        },
        {
            "comments": "---------- VM CUSTOM SCRIPT EXTENSION ----------",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('VmName'), '/CustomScriptExtension')]",
            "location": "[parameters('Location')]",
            "dependsOn": [
                "[variables('VmName')]",
                "JsonADDomainExtension",
                "[parameters('StorageAccountName')]",
                "[variables('RoleAssignmentName')]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', parameters('StorageAccountName'), 'default', parameters('HostPoolName'))]"
            ],
            "tags": "[parameters('Tags')]",
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/jamasten/Azure/master/solutions/avd/scripts/New-DomainJoinStorageAccount.ps1"
                    ],
                    "timestamp": "[parameters('Timestamp')]"
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File New-DomainJoinStorageAccount.ps1 -DomainJoinPassword ', parameters('DomainJoinPassword'), ' -DomainJoinUserPrincipalName ', parameters('DomainJoinUserPrincipalName'), ' -DomainServices ', parameters('DomainServices'), ' -Environment ', environment().name, ' -HostPoolName ', parameters('HostPoolName'), ' -KerberosEncryptionType ', parameters('KerberosEncryptionType'), ' -Netbios ', parameters('Netbios'), ' -OuPath ', parameters('OuPath'), ' -ResourceGroupName ', variables('ResourceGroupName'), ' -SecurityPrincipalName ', parameters('SecurityPrincipalName'), ' -StorageAccountName ', parameters('StorageAccountName'), ' -StorageKey ', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), '2019-06-01').keys[0].value, ' -SubscriptionId ', subscription().subscriptionId, ' -TenantId ', subscription().tenantId)]"
                }
            }
        },
        {
            "comments": "---------- RECOVERY SERVICES > BACKUP CONTAINER ----------",
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers",
            "apiVersion": "2016-12-01",
            "name": "[concat(parameters('RecoveryServicesVaultName'), '/Azure/', variables('BackupContainer'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('VmName'), 'CustomScriptExtension')]"
            ],
            "properties": {
                "backupManagementType": "AzureStorage",
                "containerType": "StorageContainer",
                "sourceResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            }
        },
        {
            "comments": "---------- RECOVERY SERVICES > BACKUP ITEM ----------",
            "condition": "[parameters('RecoveryServices')]",
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
            "name": "[concat(parameters('RecoveryServicesVaultName'), '/Azure/', variables('BackupContainer'), '/', concat('AzureFileShare;', toLower(parameters('HostPoolName'))))]",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('Tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers', parameters('RecoveryServicesVaultName'), 'Azure', variables('BackupContainer'))]"
            ],
            "properties": {
                "protectedItemType": "AzureFileShareProtectedItem",
                "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('RecoveryServicesVaultName'), 'AvdPolicy')]",
                "sourceResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]",
                "isInlineInquiry": "true"
            }
        }
    ]
}