{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "DiskSku": {
            "type": "string",
            "metadata": {
                "description": "The disk sku for the virtual machine operating system disk."
            },
            "allowedValues": [
                "Standard_LRS",
                "StandardSSD_LRS",
                "Premium_LRS"
            ]
        },
        "HyperVGeneration": {
            "type": "string",
            "metadata": {
                "description": "The HyperV generation of the virtual machine."
            },
            "allowedValues": [
                "V1",
                "V2"
            ]
        },
        "LicenseType": {
            "type": "string",
            "metadata": {
                "description": "The license type or hybrid use benefit for the virtual machine operating system."
            },
            "allowedValues": [
                "Windows_Client",
                "Windows_Server",
                "RHEL_BYOS",
                "SLES_BYOS",
                "None"
            ]
        },
        "Location": {
            "type": "string",
            "metadata": {
                "description": "The deployment location for all the resources in this template."
            },
            "defaultValue": "[resourceGroup().location]"
        },
        "OsType": {
            "type": "string",
            "metadata": {
                "description": "The operating system type for the virtual machine."
            },
            "allowedValues": [
                "Linux",
                "Windows"
            ]
        },
        "PublicIpAddress": {
            "type": "string",
            "metadata": {
                "description": "This setting determines whether a Public IP Address will be deployed."
            },
            "allowedValues": [
                "yes",
                "no"
            ]
        },
        "SnapshotResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource ID of the snapshot for the virtual machine."
            }
        },
        "SubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the subnet for virtual machine's network interface."
            }
        },
        "ResourceNameSuffix": {
            "type": "string",
            "metadata": {
                "description": "The suffix for all the names of resources that are deployed with this template."
            }
        },
        "VirtualMachineSize": {
            "type": "string",
            "metadata": {
                "description": "The size or sku for the virtual machine."
            }
        },
        "VnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the virtual network for the virtual machine's network interface."
            }
        },
        "VnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The resource group name of the virtual network for the virtual machine's network interface."
            }
        }
    },
    "variables": {
        "IpConfigWithPip": {
            "privateIPAllocationMethod": "Dynamic",
            "subnet": {
                "id": "[resourceId(parameters('VnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VnetName'), parameters('SubnetName'))]"
            },
            "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip-', parameters('ResourceNameSuffix')))]"
            }
        },
        "IpConfigWithoutPip": {
            "privateIPAllocationMethod": "Dynamic",
            "subnet": {
                "id": "[resourceId(parameters('VnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VnetName'), parameters('SubnetName'))]"
            }
        },
        "Tags": {

        }
    },
    "resources": [
        {
            "name": "[concat('disk-', parameters('ResourceNameSuffix'))]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2020-09-30",
            "location": "[parameters('Location')]",
            "tags": "[variables('Tags')]",
            "sku": {
                "name": "[parameters('DiskSku')]"
            },
            "properties": {
                "osType": "[parameters('OsType')]",
                "hyperVGeneration": "[parameters('HyperVGeneration')]",
                "creationData": {
                    "createOption": "Copy",
                    "sourceResourceId": "[parameters('SnapshotResourceId')]"
                }
            }
        },
        {
            "condition": "[equals(parameters('PublicIpAddress'), 'yes')]",
            "name": "[concat('pip-', parameters('ResourceNameSuffix'))]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "location": "[parameters('Location')]",
            "tags": "[variables('Tags')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "name": "[concat('nic-', parameters('ResourceNameSuffix'))]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "location": "[parameters('Location')]",
            "tags": "[variables('Tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip-', parameters('ResourceNameSuffix')))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": "[if(equals(parameters('PublicIpAddress'), 'no'), variables('IpConfigWithoutPip'), variables('IpConfigWithPip'))]"
                    }
                ]
            }
        },
        {
            "name": "[concat('vm-', parameters('ResourceNameSuffix'))]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "location": "[parameters('Location')]",
            "tags": "[variables('Tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/disks', concat('disk-', parameters('ResourceNameSuffix')))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', parameters('ResourceNameSuffix')))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('VirtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "[parameters('OsType')]",
                        "caching": "ReadWrite",
                        "createOption": "Attach",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat('disk-', parameters('ResourceNameSuffix')))]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-', parameters('ResourceNameSuffix')))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                },
                "licenseType": "[if(equals(parameters('LicenseType'), 'None'), json('null'), parameters('LicenseType'))]"
            },
            "resources": []
        }
    ],
    "outputs": {}
}